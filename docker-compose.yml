version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-my
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network  # Adicionado para garantir que o RabbitMQ esteja na mesma rede

  mariadb:
    image: mariadb:latest
    container_name: mariadb-my
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DB}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network  # Adicionado para garantir que o MariaDB esteja na mesma rede

  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    ports:
      - '3000'  
    depends_on:
      - mariadb
      - rabbitmq
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DB: ${DB_DB}
      RABBITMQ_URL: ${RABBITMQ_URL}
    networks:
      - app-network  # Garantir que o Nginx consiga acessar o NestJS

  nginx:
    image: nginx:latest
    container_name: nginx-my
    ports:
      - '5500:80'  # Mapeando a porta 5500 do host para a porta 80 do container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Montando o arquivo de configuração do Nginx
    depends_on:
      - nestjs-app
    networks:
      - app-network  # Garantir que o Nginx esteja na mesma rede

volumes:
  rabbitmq_data:
  mariadb_data:

networks:
  app-network:
    driver: bridge  # A rede bridge permite a comunicação entre containers
